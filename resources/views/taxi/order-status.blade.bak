<x-main-layout title="๐ ุญุงูุฉ ุทูุจ Delni Taxi">
    {{-- ๐ ุจุงูุฑ ุญุงูุฉ ุงูุฅุดุนุงุฑุงุช --}}
    <div id="notifBanner" class="w-full text-center py-2 font-semibold text-white hidden"></div>

    {{-- ๐ฆ ุดุฑูุท ุงูุญุงูุฉ --}}
    <div id="statusBar" class="w-full text-center py-3 font-bold text-white transition-colors duration-500">
        ๐ฆ ุฌุงุฑู ุชุญููู ุงูุญุงูุฉ...
    </div>

    @if(session('success'))
        <div class="bg-green-100 text-green-800 p-3 rounded mb-4 text-center max-w-xl mx-auto">
            {{ session('success') }}
        </div>
    @endif

    {{-- โญ ุชูููู ุงูุณุงุฆู --}}
    <div class="bg-white p-6 rounded shadow max-w-xl mx-auto mt-8">
        <h2 class="text-xl font-bold text-gray-800 text-center mb-4">โญ ูููู ุงูุณุงุฆู</h2>
        <form method="POST" action="{{ route('submit.rating') }}">
            @csrf
            <input type="hidden" name="driver_name" value="{{ $driver->name }}">
            <div class="mb-4 text-right">
                <label for="rating" class="block text-gray-700 font-semibold mb-1">ุงูุชูููู:</label>
                <select name="rating" id="rating" class="w-full border rounded px-3 py-2">
                    <option value="">ุงุฎุชุฑ ุงูุชูููู</option>
                    <option value="5">โญโญโญโญโญ ููุชุงุฒ</option>
                    <option value="4">โญโญโญโญ ุฌูุฏ ุฌุฏูุง</option>
                    <option value="3">โญโญโญ ุฌูุฏ</option>
                    <option value="2">โญโญ ููุจูู</option>
                    <option value="1">โญ ุถุนูู</option>
                </select>
            </div>
            <div class="mb-4 text-right">
                <label for="comment" class="block text-gray-700 font-semibold mb-1">ููุงุญุธุงุช:</label>
                <textarea name="comment" id="comment" rows="3" class="w-full border rounded px-3 py-2"></textarea>
            </div>
            <div class="text-center">
                <button type="submit" class="bg-yellow-500 text-white px-5 py-2 rounded hover:bg-yellow-600 transition">
                    ุฅุฑุณุงู ุงูุชูููู
                </button>
            </div>
        </form>
    </div>

    {{-- ๐ ุชูุงุตูู ุงูุทูุจ --}}
    <div class="max-w-2xl mx-auto px-4 py-10 text-center">
        <h1 class="text-3xl font-bold text-yellow-600 mb-2">๐ ุทูุจู ููุฏ ุงูุชูููุฐ</h1>
        <div class="text-sm text-gray-500 mb-4">ุขุฎุฑ ุชุญุฏูุซ: <span id="lastUpdate">ุงูุขู</span></div>

        <p class="text-gray-700 mb-6" id="statusText">
            @if ($order->status === 'ููุฏ ุงูุชูููุฐ')
                ุชู ุฅุฑุณุงู ุทูุจู! ุงูุณุงุฆู ุงูุฃูุฑุจ ูู ุทุฑููู ุฅููู.
            @elseif ($order->status === 'ุจุฏุฃุช ุงูุฑุญูุฉ')
                ๐ ุงูุฑุญูุฉ ุจุฏุฃุช! ุงุณุชูุชุน ุจูุดูุงุฑู.
            @elseif ($order->status === 'ููุชูู')
                โ ุงูุฑุญูุฉ ููุชููุฉ.
            @else
                ๐ง ุญุงูุฉ ุงูุทูุจ: {{ $order->status }}
            @endif
        </p>

        {{-- ๐บ๏ธ ุฎุฑูุทุฉ ูููุน ุงูุฑุงูุจ ููุท --}}
        <h3 class="text-xl font-bold text-gray-700 mt-10 mb-2">๐บ๏ธ ูููุน ุงูุฑุงูุจ (ููุทุฉ ุงูุงูุทูุงู)</h3>
        <div id="pickup-map" class="w-full h-[300px] rounded shadow border mb-6"></div>

        {{-- ๐จโโ๏ธ ุชูุงุตูู ุงูุณุงุฆู --}}
        <div class="bg-white shadow-md rounded-lg p-6 mb-6">
            <h3 class="text-xl font-semibold text-yellow-600 mb-4 flex items-center gap-2">๐จโโ๏ธ ุชูุงุตูู ุงูุณุงุฆู</h3>
            <div class="grid grid-cols-1 sm:grid-cols-2 gap-4 text-gray-700 text-right">
                <div><span class="font-bold">๐จโโ๏ธ ุงูุงุณู:</span> <span id="dName">{{ $driver->name }}</span></div>
                <div><span class="font-bold">๐ ุงูุณูุงุฑุฉ:</span> <span id="dCar">{{ $driver->car_number }}</span></div>
                <div>
                    <span class="font-bold">๐ฑ ุฑูู ุงููุงุชู:</span>
                    <a id="dPhone" href="tel:{{ $driver->phone ?? '' }}">{{ $driver->phone ?? 'ุบูุฑ ูุชููุฑ' }}</a>
                </div>
                <div><span class="font-bold">โฑ๏ธ ุงููุตูู ุงููุชููุน:</span> <span id="eta" class="text-blue-600 font-semibold">ุฌุงุฑู ุงูุญุณุงุจ...</span></div>
                <div><span class="font-bold">๐ฆ ุงูุญุงูุฉ:</span> <span id="dStatus">{{ $driver->status }}</span></div>
            </div>

            {{-- ๐ ุชูุนูู/ุชุนุทูู ุฅุดุนุงุฑุงุช ุงููุชุตูุญ --}}
            <div class="mt-4 text-right">
                <label class="inline-flex items-center gap-2 cursor-pointer">
                    <input type="checkbox" id="notifToggle" class="h-4 w-4">
                    <span class="text-sm text-gray-700">ุชูุนูู ุฅุดุนุงุฑุงุช ุงููุชุตูุญ ููุฐู ุงูุฑุญูุฉ</span>
                </label>
                <div class="text-xs text-gray-500 mt-1">
                    ุณุชุตูู ุฅุดุนุงุฑุงุช ุนูุฏ ูุตูู ุงูุณุงุฆู ุฃู ุชุบููุฑ ุงูุญุงูุฉ.
                </div>
            </div>
        </div>

        {{-- ๐ ุฒุฑ ุงูุงุชุตุงู --}}
        <div class="mb-4">
            <button id="contactDriverBtn" class="bg-blue-500 text-white px-6 py-2 rounded-full hover:bg-blue-600 transition">
                ๐ ุชูุงุตู ูุน ุงูุณุงุฆู
            </button>
        </div>

        {{-- ๐บ๏ธ ุงูุฎุฑูุทุฉ ุงููุจูุฑุฉ --}}
        <div id="map" class="w-full h-[500px] rounded-lg shadow mb-6"></div>

        {{-- ๐ฌ ุงููุญุงุฏุซุฉ --}}
        <div class="max-w-xl mx-auto bg-white shadow rounded-lg p-5 mt-10">
            <h2 class="text-xl font-bold text-yellow-600 mb-4 text-center">๐ฌ ุงููุญุงุฏุซุฉ ูุน ุงูุณุงุฆู</h2>
            <div id="chatBox" class="h-64 overflow-y-auto border border-gray-300 p-4 rounded-lg bg-gray-50 space-y-2 text-sm text-right"></div>
            <form id="chatForm" class="mt-4 flex gap-3">
                @csrf
                <input type="hidden" name="order_id" value="{{ $order->id }}">
                <input type="hidden" name="sender" value="user">
                <input type="text" name="message" placeholder="โ๏ธ ุงูุชุจ ุฑุณุงูุชู ููุง..." class="flex-1 border border-gray-300 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-yellow-500" required>
                <button type="submit" class="bg-yellow-500 hover:bg-yellow-600 text-white px-5 py-2 rounded-lg transition">ุฅุฑุณุงู</button>
            </form>
        </div>

        {{-- ๐ ุฃุฒุฑุงุฑ ุงูุชุญูู --}}
        <div class="text-center mt-8 space-y-4">
            <div class="flex flex-col sm:flex-row justify-center items-center gap-4 mt-6">
                @if ($order->status === 'ููุฏ ุงูุชูููุฐ')
                    <form action="{{ route('taxi.order.start', $order->id) }}" method="POST" onsubmit="return confirm('ูู ุฃูุช ูุชุฃูุฏ ุฃูู ุชุฑูุฏ ุจุฏุก ุงูุฑุญูุฉุ')">
                        @csrf
                        <button type="submit" class="bg-yellow-600 hover:bg-yellow-700 text-white px-6 py-3 rounded-lg shadow transition-all duration-200">๐ฆ ุจุฏุฃ ุงูุฑุญูุฉ</button>
                    </form>
                @endif
                <button onclick="cancelOrder()" class="bg-red-600 hover:bg-red-700 text-white px-6 py-3 rounded-lg shadow transition-all duration-200">โ ุฅูุบุงุก ุงูุทูุจ</button>
                <form action="{{ route('taxi.complete.with.rating') }}" method="POST" onsubmit="return confirm('ูู ุฃูุช ูุชุฃูุฏ ูู ุฅููุงุก ุงูุฑุญูุฉ ูุชูููู ุงูุณุงุฆูุ')">
                    @csrf
                    <input type="hidden" name="order_id" value="{{ $order->id }}">
                    <input type="hidden" name="driver_id" value="{{ $driver->id }}">
                    <input type="hidden" name="driver_name" value="{{ $driver->name }}">
                    <input type="hidden" name="rating" value="5">
                    <input type="hidden" name="comment" value="ุฑุญูุฉ ููุชุงุฒุฉ">
                    <button type="submit" class="bg-green-600 hover:bg-green-700 text-white px-6 py-3 rounded-lg shadow transition-all duration-200">โ ุฅููุงุก ุงูุฑุญูุฉ</button>
                </form>
            </div>
        </div>

        {{-- โ Leaflet + ุฅุดุนุงุฑุงุช --}}
        <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
        <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
        <style>
            .pulse { animation: pulse 1s infinite; }
            @keyframes pulse { 0%{transform:scale(1);opacity:1;}50%{transform:scale(1.3);opacity:0.6;}100%{transform:scale(1);opacity:1;} }
        </style>

        <script>
        // ======= ุงูุฃุตูุงุช & ูุชุบูุฑุงุช ุนุงูุฉ =======
        const arrivalSound = new Audio('/sounds/arrival.mp3');
        const messageSound = new Audio('/sounds/message.mp3');
        const statusChangeSound = new Audio('/sounds/status-change.mp3');

        const notifBanner = document.getElementById("notifBanner");
        const notifToggle = document.getElementById("notifToggle");
        const statusBar   = document.getElementById("statusBar");
        let notifEnabled  = false;
        let lastMessageCount = 0;

        let lastDriverStatus = @json($driver->status ?? '');
        let lastOrderStatus  = @json($order->status ?? '');
        let arrivalAnnounced = false;

        // ======= ุฃุฏูุงุช ูุณุงุนุฏุฉ =======
        function statusToText(s){
            if(!s) return 'โ';
            if(s === 'ููุฏ ุงูุชูููุฐ') return 'ุชู ุฅุฑุณุงู ุทูุจู! ุงูุณุงุฆู ุงูุฃูุฑุจ ูู ุทุฑููู ุฅููู.';
            if(s === 'ุจุฏุฃุช ุงูุฑุญูุฉ') return '๐ ุงูุฑุญูุฉ ุจุฏุฃุช! ุงุณุชูุชุน ุจูุดูุงุฑู.';
            if(s === 'ููุชูู')       return 'โ ุงูุฑุญูุฉ ููุชููุฉ.';
            if(s === 'ููุบู')        return '๐ซ ุชู ุฅูุบุงุก ุงูุทูุจ.';
            return '๐ง ุญุงูุฉ ุงูุทูุจ: ' + s;
        }

        function colorForStatus(s){
            if(s === 'ููุฏ ุงูุชูููุฐ' || s?.includes('ุจุงูุชุธุงุฑ') || s?.includes('ูู ุงูุทุฑูู')) return 'bg-yellow-500';
            if(s === 'ุจุฏุฃุช ุงูุฑุญูุฉ') return 'bg-blue-600';
            if(s === 'ููุชูู')       return 'bg-green-600';
            if(s === 'ููุบู')        return 'bg-gray-600';
            return 'bg-indigo-600';
        }

        function updateStatusBarDisplay(status){
            statusBar.textContent = '๐ฆ ' + (status || 'ุบูุฑ ูุนุฑูู');
            statusBar.className = `w-full text-center py-3 font-bold text-white transition-colors duration-500 ${colorForStatus(status)}`;
        }

        function pushNotification(title, body){
            if(!notifEnabled) return;
            try{
                if(Notification.permission === "granted"){
                    new Notification(title, { body, icon: "/images/taxi-icon.png" });
                }
            }catch(_){}
        }

        function onDriverArrived(){
            if(!arrivalAnnounced){
                arrivalAnnounced = true;
                pushNotification("๐ ุงูุณุงุฆู ูุตู", "ุงูุณุงุฆู ุงูุขู ูู ูููุนู ุชูุฑูุจูุง.");
                try{ arrivalSound.play(); }catch(_){}
                document.getElementById('eta').textContent = "๐ ุงูุณุงุฆู ูุตู!";
            }
        }

        function onStatusChanged(newStatus){
            if(newStatus && newStatus !== lastOrderStatus){
                pushNotification("๐ ุชุบููุฑ ุญุงูุฉ ุงูุฑุญูุฉ", "ุงูุญุงูุฉ ุงูุฌุฏูุฏุฉ: " + newStatus);
                try{ statusChangeSound.play(); }catch(_){}
                lastOrderStatus = newStatus;
                updateStatusBarDisplay(newStatus);
                document.getElementById('statusText').textContent = statusToText(newStatus);
            }
        }

        function updateNotifBanner(){
            notifBanner.classList.remove("hidden");
            notifBanner.textContent = notifEnabled ? "โ ุงูุฅุดุนุงุฑุงุช ููุนูุฉ" : "โ ุงูุฅุดุนุงุฑุงุช ูุนุทูุฉ";
            notifBanner.className = notifEnabled
                ? "w-full text-center py-2 font-semibold bg-green-500 text-white"
                : "w-full text-center py-2 font-semibold bg-red-500 text-white";
        }

        function kmDistance(aLat,aLng,bLat,bLng){
            const R=6371, dLat=(bLat-aLat)*Math.PI/180, dLng=(bLng-aLng)*Math.PI/180;
            const s1=Math.sin(dLat/2), s2=Math.sin(dLng/2);
            const A=s1*s1 + Math.cos(aLat*Math.PI/180)*Math.cos(bLat*Math.PI/180)*s2*s2;
            return R * (2 * Math.atan2(Math.sqrt(A), Math.sqrt(1-A)));
        }

        // ======= ุจูุงูุงุช ุงุจุชุฏุงุฆูุฉ ูู ุงูุณูุฑูุฑ =======
        const driverInitial = {
            lat: parseFloat("{{ $driver->latitude }}"),
            lng: parseFloat("{{ $driver->longitude }}"),
            name: @json($driver->name),
            car:  @json($driver->car_number),
            phone:@json($driver->phone),
            status:@json($driver->status),
        };

        const user = {
            lat: parseFloat("{{ $order->pickup_latitude }}"),
            lng: parseFloat("{{ $order->pickup_longitude }}")
        };

        // ======= ุฎุฑูุทุฉ ุงูุฑุงูุจ (ุงููุตุบุฑุฉ) =======
        document.addEventListener("DOMContentLoaded", function () {
            const pickupMap = L.map('pickup-map').setView([user.lat, user.lng], 15);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { maxZoom: 19, attribution: 'ยฉ OpenStreetMap' }).addTo(pickupMap);
            L.marker([user.lat, user.lng]).addTo(pickupMap).bindPopup("๐ ูููุน ุงูุฑุงูุจ (ููุทุฉ ุงูุงูุทูุงู)").openPopup();
        });

        // ======= ุงูุฎุฑูุทุฉ ุงููุจูุฑุฉ (ุงูุณุงุฆู โ๏ธ ุงูุฑุงูุจ) =======
        const map = L.map('map').setView([user.lat, user.lng], 12);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', { attribution: 'ยฉ OpenStreetMap' }).addTo(map);
        const taxiIcon = L.icon({ iconUrl: '/images/taxi-icon.png', iconSize: [36,36], iconAnchor:[18,36] });

        const driverMarker = L.marker([driverInitial.lat, driverInitial.lng], { icon: taxiIcon })
            .addTo(map).bindPopup("๐ ุงูุณุงุฆู ููุง").openPopup();

        const userMarker = L.circleMarker([user.lat, user.lng], {
            radius:8, fillColor:"#007BFF", color:"#fff", weight:2, fillOpacity:0.9
        }).addTo(map).bindPopup("๐ ูููุนู").openPopup();

        let pathLine = L.polyline([[driverInitial.lat, driverInitial.lng],[user.lat,user.lng]], { color:'blue' }).addTo(map);

        // ======= ุฃุฒุฑุงุฑ/ุฃุญุฏุงุซ ุนุงูุฉ =======
        document.getElementById("contactDriverBtn").addEventListener("click", () => {
            const ph = document.getElementById('dPhone')?.getAttribute('href') || '';
            if (ph) location.href = ph; else alert("๐ ุฑูู ุงููุงุชู ุบูุฑ ูุชููุฑ.");
        });

        function cancelOrder(){
            if(confirm("ูู ุฃูุช ูุชุฃูุฏ ูู ุฅูุบุงุก ุงูุทูุจุ")) window.location.href = "{{ route('home') }}";
        }
        window.cancelOrder = cancelOrder; // ุฅุจูุงุก ุงูุฏุงูุฉ ูุชุงุญุฉ ููุฒุฑ

        // ======= ุชููุฆุฉ ุงูุฅุดุนุงุฑุงุช =======
        document.addEventListener('DOMContentLoaded', async () => {
            const saved = localStorage.getItem('taxi_push_notif') === '1';
            notifEnabled = saved && (("Notification" in window) ? (Notification.permission === 'granted') : false);
            if (notifToggle) notifToggle.checked = notifEnabled;
            updateNotifBanner();
            updateStatusBarDisplay(@json($order->status ?? ''));

            notifToggle?.addEventListener('change', async () => {
                if (!("Notification" in window)) { alert('ุงููุชุตูุญ ูุง ูุฏุนู ุงูุฅุดุนุงุฑุงุช.'); notifToggle.checked = false; return; }
                if (notifToggle.checked) {
                    const perm = await Notification.requestPermission();
                    if (perm !== 'granted') {
                        notifToggle.checked = false;
                        notifEnabled = false;
                        localStorage.setItem('taxi_push_notif','0');
                        updateNotifBanner();
                        return;
                    }
                    notifEnabled = true;
                    localStorage.setItem('taxi_push_notif','1');
                } else {
                    notifEnabled = false;
                    localStorage.setItem('taxi_push_notif','0');
                }
                updateNotifBanner();
            });
        });

        // ======= ุงูุชุญุฏูุซ ุงูุญู (ุญุงูุฉ ุงูุทูุจ + ูููุน ุงูุณุงุฆู) =======
        async function refreshLive(){
            try{
                const res = await fetch("{{ route('taxi.order.json', $order->id) }}", { cache: 'no-store' });
                if(!res.ok) return;
                const { order, driver } = await res.json();

                document.getElementById('lastUpdate').textContent = new Date().toLocaleTimeString();

                // ุญุงูุฉ ุงูุทูุจ + ุดุฑูุท ุงูุญุงูุฉ
                if(order?.status){
                    onStatusChanged(order.status);
                }

                // ุชุญุฏูุซ ุจูุงูุงุช ุงูุณุงุฆู ุนูู ุงูุดุงุดุฉ
                if(driver){
                    // ุงูุงุณู/ุงููุงุชู
                    if (driver.name)  document.getElementById('dName').textContent = driver.name;
                    if (driver.phone){
                        const ph = document.getElementById('dPhone');
                        ph.href = 'tel:' + driver.phone;
                        ph.textContent = driver.phone;
                    }
                    if (driver.status){
                        document.getElementById('dStatus').textContent = driver.status;
                        if (driver.status !== lastDriverStatus){
                            lastDriverStatus = driver.status;
                        }
                    }
                    // ุงูุณูุงุฑุฉ (ูุฏ ูุง ุชุฃุชู ูู JSONุ ููุจูููุง ููุง ูู ุฅู ูู ุชุชููุฑ)
                    if (driver.car_number){
                        document.getElementById('dCar').textContent = driver.car_number;
                    }

                    // ุชุญุฏูุซ ุงูุฎุฑูุทุฉ/ETA
                    const dLat = parseFloat(driver.latitude);
                    const dLng = parseFloat(driver.longitude);
                    if (Number.isFinite(dLat) && Number.isFinite(dLng)){
                        driverMarker.setLatLng([dLat, dLng]);
                        pathLine.setLatLngs([[dLat, dLng], [user.lat, user.lng]]);

                        const km = kmDistance(dLat, dLng, user.lat, user.lng);
                        // ุณุฑุนุฉ ุงูุชุฑุงุถูุฉ 40 ูู/ุณ
                        const minutes = Math.floor((km / 40) * 60);
                        const seconds = Math.round(((km / 40) * 60 - minutes) * 60);
                        document.getElementById('eta').textContent =
                            km < 0.05 ? "๐ ุงูุณุงุฆู ูุตู!" : `${minutes} ุฏูููุฉ ${seconds} ุซุงููุฉ (${km.toFixed(2)} ูู)`;

                        if (km < 0.05) onDriverArrived();
                    }
                }
            }catch(_){}
        }
        refreshLive();
        setInterval(refreshLive, 10000);

        // ======= ุงููุญุงุฏุซุฉ =======
        async function loadMessages(){
            const orderId = "{{ $order->id }}";
            const res = await fetch("{{ route('driver.message.fetch') }}?order_id=" + orderId);
            if(!res.ok) return;
            const messages = await res.json();
            const chatBox = document.getElementById("chatBox");

            if (messages.length > lastMessageCount) {
                try{ messageSound.play(); }catch(_){}
                lastMessageCount = messages.length;
            }

            chatBox.innerHTML = "";
            messages.forEach(msg => {
                const msgDiv = document.createElement("div");
                const date = new Date(msg.created_at);
                const formattedTime = date.toLocaleTimeString('ar-EG',{hour:'2-digit',minute:'2-digit'});
                if (msg.sender === 'user') {
                    msgDiv.className = "bg-yellow-100 text-gray-800 p-2 rounded-lg text-right w-fit ml-auto max-w-[80%]";
                    msgDiv.innerHTML = `<strong>๐ค ุฃูุช:</strong> ${msg.message}<br><small class="text-gray-500">${formattedTime}</small>`;
                } else {
                    msgDiv.className = "bg-gray-200 text-gray-800 p-2 rounded-lg text-right w-fit mr-auto max-w-[80%]";
                    msgDiv.innerHTML = `<strong>๐ ุงูุณุงุฆู:</strong> ${msg.message}<br><small class="text-gray-500">${formattedTime}</small>`;
                }
                chatBox.appendChild(msgDiv);
            });
            chatBox.scrollTop = chatBox.scrollHeight;
        }
        document.getElementById("chatForm").addEventListener("submit", async function(e){
            e.preventDefault();
            const formData = new FormData(this);
            await fetch("{{ route('driver.message.store') }}", { method: "POST", body: formData });
            this.reset();
            loadMessages();
        });
        setInterval(loadMessages, 5000);
        loadMessages();
        </script>
    </div>
</x-main-layout>
